# Generated from grammarC.g4 by ANTLR 4.7
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u0160\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t")
        buf.write("\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3")
        buf.write("\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\7\'\u00fa\n\'")
        buf.write("\f\'\16\'\u00fd\13\'\3(\6(\u0100\n(\r(\16(\u0101\3(\7")
        buf.write("(\u0105\n(\f(\16(\u0108\13(\3(\3(\6(\u010c\n(\r(\16(\u010d")
        buf.write("\3(\6(\u0111\n(\r(\16(\u0112\3(\3(\7(\u0117\n(\f(\16(")
        buf.write("\u011a\13(\3(\3(\6(\u011e\n(\r(\16(\u011f\3(\5(\u0123")
        buf.write("\n(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3")
        buf.write(")\5)\u0136\n)\3*\6*\u0139\n*\r*\16*\u013a\3*\3*\3+\3+")
        buf.write("\5+\u0141\n+\3+\5+\u0144\n+\3+\3+\3,\3,\3,\3,\7,\u014c")
        buf.write("\n,\f,\16,\u014f\13,\3,\3,\3,\3,\3,\3-\3-\3-\3-\7-\u015a")
        buf.write("\n-\f-\16-\u015d\13-\3-\3-\3\u014d\2.\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.\3\2")
        buf.write("\b\4\2C\\c|\5\2\62;C\\c|\3\2\62;\5\2\60\60\62\62;;\4\2")
        buf.write("\13\13\"\"\4\2\f\f\17\17\2\u016f\2\3\3\2\2\2\2\5\3\2\2")
        buf.write("\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2")
        buf.write("\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27")
        buf.write("\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3")
        buf.write("\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2")
        buf.write(")\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2")
        buf.write("\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2")
        buf.write(";\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2")
        buf.write("\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2")
        buf.write("\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2")
        buf.write("\2\2\2Y\3\2\2\2\3[\3\2\2\2\5d\3\2\2\2\7f\3\2\2\2\tj\3")
        buf.write("\2\2\2\13p\3\2\2\2\rr\3\2\2\2\17t\3\2\2\2\21v\3\2\2\2")
        buf.write("\23x\3\2\2\2\25z\3\2\2\2\27\u0081\3\2\2\2\31\u0083\3\2")
        buf.write("\2\2\33\u0086\3\2\2\2\35\u0089\3\2\2\2\37\u008b\3\2\2")
        buf.write("\2!\u008d\3\2\2\2#\u0090\3\2\2\2%\u0095\3\2\2\2\'\u009b")
        buf.write("\3\2\2\2)\u009f\3\2\2\2+\u00a1\3\2\2\2-\u00a4\3\2\2\2")
        buf.write("/\u00a7\3\2\2\2\61\u00aa\3\2\2\2\63\u00ac\3\2\2\2\65\u00b2")
        buf.write("\3\2\2\2\67\u00b4\3\2\2\29\u00b6\3\2\2\2;\u00b8\3\2\2")
        buf.write("\2=\u00ba\3\2\2\2?\u00bc\3\2\2\2A\u00c0\3\2\2\2C\u00c6")
        buf.write("\3\2\2\2E\u00cb\3\2\2\2G\u00d0\3\2\2\2I\u00d6\3\2\2\2")
        buf.write("K\u00e0\3\2\2\2M\u00f7\3\2\2\2O\u0122\3\2\2\2Q\u0135\3")
        buf.write("\2\2\2S\u0138\3\2\2\2U\u0143\3\2\2\2W\u0147\3\2\2\2Y\u0155")
        buf.write("\3\2\2\2[\\\7%\2\2\\]\7k\2\2]^\7p\2\2^_\7e\2\2_`\7n\2")
        buf.write("\2`a\7w\2\2ab\7f\2\2bc\7g\2\2c\4\3\2\2\2de\7>\2\2e\6\3")
        buf.write("\2\2\2fg\7\60\2\2gh\7j\2\2hi\7@\2\2i\b\3\2\2\2jk\7u\2")
        buf.write("\2kl\7v\2\2lm\7f\2\2mn\7k\2\2no\7q\2\2o\n\3\2\2\2pq\7")
        buf.write("*\2\2q\f\3\2\2\2rs\7+\2\2s\16\3\2\2\2tu\7}\2\2u\20\3\2")
        buf.write("\2\2vw\7\177\2\2w\22\3\2\2\2xy\7.\2\2y\24\3\2\2\2z{\7")
        buf.write("t\2\2{|\7g\2\2|}\7v\2\2}~\7w\2\2~\177\7t\2\2\177\u0080")
        buf.write("\7p\2\2\u0080\26\3\2\2\2\u0081\u0082\7?\2\2\u0082\30\3")
        buf.write("\2\2\2\u0083\u0084\7-\2\2\u0084\u0085\7-\2\2\u0085\32")
        buf.write("\3\2\2\2\u0086\u0087\7/\2\2\u0087\u0088\7/\2\2\u0088\34")
        buf.write("\3\2\2\2\u0089\u008a\7]\2\2\u008a\36\3\2\2\2\u008b\u008c")
        buf.write("\7_\2\2\u008c \3\2\2\2\u008d\u008e\7k\2\2\u008e\u008f")
        buf.write("\7h\2\2\u008f\"\3\2\2\2\u0090\u0091\7g\2\2\u0091\u0092")
        buf.write("\7n\2\2\u0092\u0093\7u\2\2\u0093\u0094\7g\2\2\u0094$\3")
        buf.write("\2\2\2\u0095\u0096\7y\2\2\u0096\u0097\7j\2\2\u0097\u0098")
        buf.write("\7k\2\2\u0098\u0099\7n\2\2\u0099\u009a\7g\2\2\u009a&\3")
        buf.write("\2\2\2\u009b\u009c\7h\2\2\u009c\u009d\7q\2\2\u009d\u009e")
        buf.write("\7t\2\2\u009e(\3\2\2\2\u009f\u00a0\7@\2\2\u00a0*\3\2\2")
        buf.write("\2\u00a1\u00a2\7?\2\2\u00a2\u00a3\7?\2\2\u00a3,\3\2\2")
        buf.write("\2\u00a4\u00a5\7>\2\2\u00a5\u00a6\7?\2\2\u00a6.\3\2\2")
        buf.write("\2\u00a7\u00a8\7@\2\2\u00a8\u00a9\7?\2\2\u00a9\60\3\2")
        buf.write("\2\2\u00aa\u00ab\7=\2\2\u00ab\62\3\2\2\2\u00ac\u00ad\7")
        buf.write("\"\2\2\u00ad\u00ae\7=\2\2\u00ae\u00af\7\"\2\2\u00af\u00b0")
        buf.write("\7=\2\2\u00b0\u00b1\7\"\2\2\u00b1\64\3\2\2\2\u00b2\u00b3")
        buf.write("\7-\2\2\u00b3\66\3\2\2\2\u00b4\u00b5\7/\2\2\u00b58\3\2")
        buf.write("\2\2\u00b6\u00b7\7\'\2\2\u00b7:\3\2\2\2\u00b8\u00b9\7")
        buf.write(",\2\2\u00b9<\3\2\2\2\u00ba\u00bb\7\61\2\2\u00bb>\3\2\2")
        buf.write("\2\u00bc\u00bd\7k\2\2\u00bd\u00be\7p\2\2\u00be\u00bf\7")
        buf.write("v\2\2\u00bf@\3\2\2\2\u00c0\u00c1\7h\2\2\u00c1\u00c2\7")
        buf.write("n\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4\7c\2\2\u00c4\u00c5")
        buf.write("\7v\2\2\u00c5B\3\2\2\2\u00c6\u00c7\7e\2\2\u00c7\u00c8")
        buf.write("\7j\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca\7t\2\2\u00caD\3")
        buf.write("\2\2\2\u00cb\u00cc\7x\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce")
        buf.write("\7k\2\2\u00ce\u00cf\7f\2\2\u00cfF\3\2\2\2\u00d0\u00d1")
        buf.write("\7e\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4")
        buf.write("\7u\2\2\u00d4\u00d5\7v\2\2\u00d5H\3\2\2\2\u00d6\u00d7")
        buf.write("\7k\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da")
        buf.write("\7\"\2\2\u00da\u00db\7o\2\2\u00db\u00dc\7c\2\2\u00dc\u00dd")
        buf.write("\7k\2\2\u00dd\u00de\7p\2\2\u00de\u00df\7*\2\2\u00dfJ\3")
        buf.write("\2\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3")
        buf.write("\7v\2\2\u00e3\u00e4\7\"\2\2\u00e4\u00e5\7c\2\2\u00e5\u00e6")
        buf.write("\7t\2\2\u00e6\u00e7\7i\2\2\u00e7\u00e8\7e\2\2\u00e8\u00e9")
        buf.write("\7.\2\2\u00e9\u00ea\7\"\2\2\u00ea\u00eb\7e\2\2\u00eb\u00ec")
        buf.write("\7j\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7t\2\2\u00ee\u00ef")
        buf.write("\7\"\2\2\u00ef\u00f0\7,\2\2\u00f0\u00f1\7c\2\2\u00f1\u00f2")
        buf.write("\7t\2\2\u00f2\u00f3\7i\2\2\u00f3\u00f4\7x\2\2\u00f4\u00f5")
        buf.write("\7]\2\2\u00f5\u00f6\7_\2\2\u00f6L\3\2\2\2\u00f7\u00fb")
        buf.write("\t\2\2\2\u00f8\u00fa\t\3\2\2\u00f9\u00f8\3\2\2\2\u00fa")
        buf.write("\u00fd\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2")
        buf.write("\u00fcN\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fe\u0100\t\4\2")
        buf.write("\2\u00ff\u00fe\3\2\2\2\u0100\u0101\3\2\2\2\u0101\u00ff")
        buf.write("\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0123\3\2\2\2\u0103")
        buf.write("\u0105\t\4\2\2\u0104\u0103\3\2\2\2\u0105\u0108\3\2\2\2")
        buf.write("\u0106\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107\u0109\3")
        buf.write("\2\2\2\u0108\u0106\3\2\2\2\u0109\u010b\13\2\2\2\u010a")
        buf.write("\u010c\t\5\2\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2")
        buf.write("\u010d\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u0123\3")
        buf.write("\2\2\2\u010f\u0111\t\4\2\2\u0110\u010f\3\2\2\2\u0111\u0112")
        buf.write("\3\2\2\2\u0112\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113")
        buf.write("\u0114\3\2\2\2\u0114\u0118\13\2\2\2\u0115\u0117\t\4\2")
        buf.write("\2\u0116\u0115\3\2\2\2\u0117\u011a\3\2\2\2\u0118\u0116")
        buf.write("\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u0123\3\2\2\2\u011a")
        buf.write("\u0118\3\2\2\2\u011b\u011d\7)\2\2\u011c\u011e\t\2\2\2")
        buf.write("\u011d\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u011d\3")
        buf.write("\2\2\2\u011f\u0120\3\2\2\2\u0120\u0121\3\2\2\2\u0121\u0123")
        buf.write("\7)\2\2\u0122\u00ff\3\2\2\2\u0122\u0106\3\2\2\2\u0122")
        buf.write("\u0110\3\2\2\2\u0122\u011b\3\2\2\2\u0123P\3\2\2\2\u0124")
        buf.write("\u0125\7e\2\2\u0125\u0126\7q\2\2\u0126\u0127\7p\2\2\u0127")
        buf.write("\u0128\7v\2\2\u0128\u0129\7k\2\2\u0129\u012a\7p\2\2\u012a")
        buf.write("\u012b\7w\2\2\u012b\u012c\7g\2\2\u012c\u012d\3\2\2\2\u012d")
        buf.write("\u0136\7=\2\2\u012e\u012f\7d\2\2\u012f\u0130\7t\2\2\u0130")
        buf.write("\u0131\7g\2\2\u0131\u0132\7c\2\2\u0132\u0133\7m\2\2\u0133")
        buf.write("\u0134\3\2\2\2\u0134\u0136\7=\2\2\u0135\u0124\3\2\2\2")
        buf.write("\u0135\u012e\3\2\2\2\u0136R\3\2\2\2\u0137\u0139\t\6\2")
        buf.write("\2\u0138\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138")
        buf.write("\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013c\3\2\2\2\u013c")
        buf.write("\u013d\b*\2\2\u013dT\3\2\2\2\u013e\u0140\7\17\2\2\u013f")
        buf.write("\u0141\7\f\2\2\u0140\u013f\3\2\2\2\u0140\u0141\3\2\2\2")
        buf.write("\u0141\u0144\3\2\2\2\u0142\u0144\7\f\2\2\u0143\u013e\3")
        buf.write("\2\2\2\u0143\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0146")
        buf.write("\b+\2\2\u0146V\3\2\2\2\u0147\u0148\7\61\2\2\u0148\u0149")
        buf.write("\7,\2\2\u0149\u014d\3\2\2\2\u014a\u014c\13\2\2\2\u014b")
        buf.write("\u014a\3\2\2\2\u014c\u014f\3\2\2\2\u014d\u014e\3\2\2\2")
        buf.write("\u014d\u014b\3\2\2\2\u014e\u0150\3\2\2\2\u014f\u014d\3")
        buf.write("\2\2\2\u0150\u0151\7,\2\2\u0151\u0152\7\61\2\2\u0152\u0153")
        buf.write("\3\2\2\2\u0153\u0154\b,\2\2\u0154X\3\2\2\2\u0155\u0156")
        buf.write("\7\61\2\2\u0156\u0157\7\61\2\2\u0157\u015b\3\2\2\2\u0158")
        buf.write("\u015a\n\7\2\2\u0159\u0158\3\2\2\2\u015a\u015d\3\2\2\2")
        buf.write("\u015b\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015e\3")
        buf.write("\2\2\2\u015d\u015b\3\2\2\2\u015e\u015f\b-\2\2\u015fZ\3")
        buf.write("\2\2\2\22\2\u00f9\u00fb\u0101\u0106\u010d\u0112\u0118")
        buf.write("\u011f\u0122\u0135\u013a\u0140\u0143\u014d\u015b\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class grammarCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    ID = 38
    LIT = 39
    KW = 40
    WS = 41
    NL = 42
    BC = 43
    LC = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include'", "'<'", "'.h>'", "'stdio'", "'('", "')'", "'{'", 
            "'}'", "','", "'return'", "'='", "'++'", "'--'", "'['", "']'", 
            "'if'", "'else'", "'while'", "'for'", "'>'", "'=='", "'<='", 
            "'>='", "';'", "' ; ; '", "'+'", "'-'", "'%'", "'*'", "'/'", 
            "'int'", "'float'", "'char'", "'void'", "'const'", "'int main('", 
            "'int argc, char *argv[]'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "LIT", "KW", "WS", "NL", "BC", "LC" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "ID", "LIT", 
                  "KW", "WS", "NL", "BC", "LC" ]

    grammarFileName = "grammarC.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


